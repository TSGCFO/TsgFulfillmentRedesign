name: Claude Code with Security-Focused MCP
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write          # Full repository access
      pull-requests: write     # Create/modify PRs
      issues: write           # Create/modify issues  
      actions: write          # Workflow management
      checks: write           # Status checks
      deployments: write      # Deployments
      discussions: write      # Discussions
      pages: write            # GitHub Pages
      repository-projects: write # Projects
      security-events: write  # Security alerts
      statuses: write         # Commit statuses
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Security: Install dependencies only from trusted sources
      - name: Verify MCP server packages
        run: |
          npx audit-ci --allowlist 
          echo "✅ MCP server packages verified"

      - name: Run Claude Code with Security-Focused MCP
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          # Limited tool access for security
          allowed_tools: Bash(git status),Bash(git log),Bash(git show),Bash(git diff),View,GlobTool,GrepTool,mcp__github__*,mcp__sequential-thinking__*,mcp__filesystem__*
          mcp_config: |
            {
              "mcpServers": {
                "sequential-thinking": {
                  "command": "npx",
                  "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
                  "timeout": 15000
                },
                "filesystem": {
                  "command": "npx",
                  "args": ["-y", "@modelcontextprotocol/server-filesystem"],
                  "env": {
                    "ALLOWED_DIRECTORIES": "/home/runner/work/TsgFulfillmentRedesign/TsgFulfillmentRedesign/client/src,/home/runner/work/TsgFulfillmentRedesign/TsgFulfillmentRedesign/server,/home/runner/work/TsgFulfillmentRedesign/TsgFulfillmentRedesign/shared",
                    "READ_ONLY": "true"
                  },
                  "timeout": 10000
                }
              }
            }

      # Security: Clean up after MCP servers
      - name: Cleanup MCP artifacts
        if: always()
        run: |
          # Remove any temporary files created by MCP servers
          find /tmp -name "*mcp*" -type f -delete 2>/dev/null || true
          echo "✅ MCP cleanup completed"

      # Security: Log MCP activity for audit
      - name: Log MCP usage
        if: always()
        run: |
          echo "MCP workflow completed at $(date)" >> /tmp/mcp-audit.log
          echo "Repository: ${{ github.repository }}" >> /tmp/mcp-audit.log
          echo "Event: ${{ github.event_name }}" >> /tmp/mcp-audit.log